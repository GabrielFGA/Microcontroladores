Para as questões 2 a 5, considere que as variáveis f, g, h, i e j são do tipo inteiro (16 bits na arquitetura do MSP430), e que o
vetor A[] é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores: f: R4 g: R5 h: R6 i: R7 j: R8 A: R9 
Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

1 - Escreva os trechos de código assembly do MSP430 para: (a) Somente setar o bit menos significativo de R5. (b) Somente setar dois
bits de R6: o menos significativo e o segundo menos significativo. (c) Somente zerar o terceiro bit menos significativo de R7. 
(d) Somente zerar o terceiro e o quarto bits menos significativo de R8. (e) Somente inverter o bit mais significativo de R9. 
(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.

R: a) BIS.W #1, R5
   b) BIS.W #3, R6
   c) BIC.W #4, R7
   d) BIC.W #12, R8
   e) XOR.W 0x8000, R9
   f) XOR.W 0xF000, R10
      OR.W 0x000F, R10
   
2 - "Traduza" o seguinte trecho de código em C para o assembly do MSP430: if(i>j) f = g+h+10;
                                                                          else f = g-h-10;
R: CMP.W R7, R8
   JN Soma
   ADD.W R5, R4
   SUB.W R6, R4
   SUB.W #10, R4
   JMP EXIT
   Soma:  
   ADD.W R5, R4
   ADD.W R6, R4
   ADD.W #10, R4
   EXIT

                                                                          
3 - "Traduza" o seguinte trecho de código em C para o assembly do MSP430: while(save[i]!=k) i++;

4 - "Traduza" o seguinte trecho de código em C para o assembly do MSP430: for(i=0; i<100; i++) A[i] = i*2;

R: Loop:
   CLR R7 
   ADD.W #100, R11
   CMP.W R11, R7      ; flag N -> 1 
   JN Sub1
   EXIT
   Sub1: 
   RLA R7             ; r7 = 2*r7
   MOV.W R7, R7(R9)
   ADD.W #1, R7
   JUMP Loop  

5 - "Traduza" o seguinte trecho de código em C para o assembly do MSP430: for(i=99; i>=0; i--) A[i] = i*2;
